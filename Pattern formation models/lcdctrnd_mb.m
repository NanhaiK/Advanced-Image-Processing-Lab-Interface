function OUTIMG=lcdctrnd_mb(INPIMG,SzWx,SzWy)% Generating a random image with local power spectrum in the DCT domain% in a window (2Lx,2Ly) pixels same as the local power spectrum of the INPIMG% Image mirror extension by the size of the spatial window% CALL OUTIMG=lcdctrnd(INPIMG,Lx,Ly);INPIMG = double(INPIMG);Lx = floor(SzWx/2);Ly = floor(SzWy/2);[SzX, SzY]=size(INPIMG);OUTIMG=zeros(size(INPIMG));imgext=img_ext_mb(INPIMG,Lx,Ly);% r=0:SzWx-1;s=0:SzWy-1;% recon_mask_x=(cos(pi*r*(SzWx+1)/(2*SzWx)));% recon_mask_y=(cos(pi*s'*(SzWy+1)/(2*SzWy)));% recon_msk=kron(recon_mask_x,recon_mask_y);% recon_msk(1,:)=recon_msk(1,:)/2;% recon_msk(:,1)=recon_msk(:,1)/2;fragm = im2col(imgext, [SzWy, SzWx]);alpha = kron(dctmtx(SzWx), dctmtx(SzWy))*fragm;dc=alpha(1,:);alpha_sign=sign(rand(size(alpha))-0.5); alpha_abs=abs(alpha);alpha=alpha_abs.*alpha_sign;alpha(1,:)=dc;OUTIMG = kron(dctmtx(SzWy)', dctmtx(SzWx)')*alpha;OUTIMG = reshape(OUTIMG(floor(size(OUTIMG, 1)/2)+1, :), size(INPIMG));% DCTx   = dctmtx(SzWx);% DCTy   = dctmtx(SzWx);% for X=1:SzX% 	for Y=1:SzY,%         fragm=imgext(X:SzWx+X-1,Y:SzWy+Y-1);%         alpha=DCTx*fragm*DCTy';%         % FILTER%         dc=alpha(1,1);%         alpha_sign=sign(rand(SzWx,SzWy)-0.5); %         alpha_abs=abs(alpha);%         alpha=alpha_abs.*alpha_sign;alpha(1,1)=dc;%         alpha=alpha.*recon_msk;%         OUTIMG(X,Y)=sum(sum(alpha))/(SzWx*SzWy);% 	end% endOUTIMG = 255*(OUTIMG - min(OUTIMG(:)))/(max(OUTIMG(:))- min(OUTIMG(:)));% %  	