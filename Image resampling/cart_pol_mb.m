function OUTIMG=cart_pol_mb(INPIMG,Lint,Nro,Nphi)%profile on;INPIMG = double(INPIMG);% Conversion from cartesian to polar coordinate system% Lint-fold input image zooming by sinc-interpolation % Nro, Nphi - number of samples over ro-phi coordinates% Cener of the polar coordinate system is to be selected interactively% Call  OUTIMG=cart_pol(INPIMG,Lint,Nro,Nphi)[SzX SzY]=size(INPIMG);% C=coordinp(INPIMG);% clf;% colormap(gray(256));display1_mb(INPIMG);title('Select center of the polar coordinate system')y=  128;%ginput(1);x = 128;C=[x y];X0=C(1); Y0=C(2);INPIMG_i=interp2d_mb(INPIMG,Lint,Lint);corn1=(X0-1)^2+(Y0-1)^2;corn2=(X0-1)^2+(Y0-SzY)^2;corn3=(X0-SzX)^2+(Y0-1)^2;corn4=(X0-SzX)^2+(Y0-SzY)^2;ro_m=sqrt(max([corn1 corn2 corn3 corn4]));d_ro=ro_m/Nro;d_phi=2*pi/Nphi;ro_phi=0:1:Nro*Nphi-1;OUTIMG=zeros(Nphi,Nro);phi=kron(ones(1,Nro),[0:Nphi-1]);ro=kron([0:Nro-1],ones(1,Nphi));X=round(Lint*(X0+d_ro*ro.*cos(d_phi*phi))+1);X=X.*(X>=1)+ones(size(X)).*(X<1);X=X.*(X<=SzX*Lint)+SzX*Lint*ones(size(X)).*(X>SzX*Lint);Y=round(Lint*(Y0+d_ro*ro.*sin(d_phi*phi))+1);Y=Y.*(Y>=1)+ones(size(Y)).*(Y<1);Y=Y.*(Y<=SzY*Lint)+SzY*Lint*ones(size(Y)).*(Y>SzY*Lint);OUTIMG(ro_phi+1)=INPIMG_i(round(X+SzX*Lint*(Y-1)));OUTIMG=reshape(OUTIMG,Nphi,Nro);% colormap(gray(256));% display1_mb(OUTIMG);title(['cart\_pol.m: Lint=',num2str(Lint),';Nro=',num2str(Nro),';Nphi=',num2str(Nphi)])% axis on;xlabel('\rho');ylabel('\phi');%profile viewer;