function OUTP=sincint_mb(INPUT,Lx)% 1-D sinc interpolation with Lx-fold signal stretching% (round(SzX/2)+1)th sample of the mask is equal to cos(pi*Ux);% NO SIGNAL EXTENSION% Call OUTP=sincint(INPUT,Lx);SzX =max(size(INPUT));INPUT=reshape(INPUT,SzX,1);OUTP=zeros(Lx*SzX,1);Ux=1/(Lx);M=zeros(SzX,1);SzX_half=round(SzX/2);M(1)=1; M(SzX_half+1)=exp(1i*pi*Ux);r=2:SzX_half; Wn=1i*2*pi*Ux/SzX;M(r)=exp(Wn*(r-1)); M(SzX+2-r)=conj(M(r));spinput=fftnorm_mb(INPUT);% spinput_2 =  (spinput*ones(1,Lx)).*(cumprod(M*ones(1, Lx), 2));% spinput_2(SzX_half+1, :) = real(spinput_2(SzX_half+1, :));% out = real(ifft(spinput_2)');% OUTPUT=out(:);for l=1:Lx,		spinput=spinput.*M;        out=real(ifftnorm_mb([spinput(1:SzX_half);real(spinput(SzX_half+1));spinput(SzX_half+2:SzX)]));		key=zeros(Lx,1);key(l)=1;    	OUTP=kron(out,key)+OUTP;%         plotnorm(OUTP,1,1,1);%         title(['sincint.m: Interpolated signal, Lint=',num2str(Lx)]);%         drawnow;end