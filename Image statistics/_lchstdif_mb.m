function OUTIMG=lchstdif_mb(INPIMG,Lx,Ly)INPIMG = double(INPIMG);% RMS deviation of running histograms for the histogram  % in previous position of the running window (2*LX+1)*(2*LX+1) pixels% Image mirror extension by the size of the spatial window% Call OUTIMG=lchstdif(INPIMG,Lx,Ly);%Lx=fix((LX-1)/2);LX=2*Lx+1;%Ly=fix((LY-1)/2);LY=2*Ly+1;[SzX SzY]=size(INPIMG);clfcolormap(gray(256));subplot(121);display1_mb(INPIMG);title('Input image');drawnowOUTIMG=zeros(SzX,SzY);imgext=img_ext_mb(INPIMG,Lx,Ly);A = im2col(imgext', [(2*Lx+1), (2*Ly+1)]);B = histc(A, [0:255]);OUTIMG_1 = sqrt(sum((B(:, 1:end-1) - B(:, 2:end)).^2));OUTIMG_1 = reshape([0, OUTIMG_1], [SzX,SzY])';OUTIMG_1(:,1) = 0;histbuf=zeros(256,SzY+2*Ly);%Column histograms for the first rowfor n=1:2*Lx+1,	buf=imgext(n,:);     buf=buf+256*([0:SzY+2*Ly-1]);	histbuf(buf+1)=histbuf(buf+1)+ones(1,SzY+2*Ly);end%FIRST HISTOGRAM IN THE FIRST ROWh=sum(histbuf(:,1:2*Ly+1)')';frgmhist=h;OUTIMG(1,1)=sqrt(sum((frgmhist-h).^2));% HISTOGRAMS FOR THE REST OF PIXELS IN THE ROWfor y=2:SzY,	frgmhist=h;	h=h-histbuf(:,y-1)+histbuf(:,y+LY-1);	OUTIMG(1,y)=sqrt(sum((frgmhist-h).^2));    if (OUTIMG(1,y) ~= OUTIMG_1(1,y) )         s=0;    endend%COLUMN HISTOGRAMS FOR THE REST OF IMAGEfor x=2:SzX,	buf=imgext(x-1,:); buf=buf+256*([0:SzY+2*Ly-1]);	histbuf(buf+1)=histbuf(buf+1)-ones(1,SzY+2*Ly);	buf=imgext(2*Lx+1+x-1,:); buf=buf+256*([0:SzY+2*Ly-1]);	histbuf(buf+1)=histbuf(buf+1)+ones(1,SzY+2*Ly);%FIRST HISTOGRAM IN THE Xth ROW	h=sum(histbuf(:,1:2*Ly+1)')';	frgmhist=h;	OUTIMG(x,1)=sqrt(sum((frgmhist-h).^2));    if (OUTIMG(x,1) ~= OUTIMG_1(x,1) )         s=0;    end%HISTOGRAMS FOR THE REST OF PIXELS IN THE Xth ROW				for y=2:SzY,	frgmhist=h;	h=h-histbuf(:,y-1)+histbuf(:,y+LY-1);	OUTIMG(x,y)=sqrt(sum((frgmhist-h).^2));    if (OUTIMG(x,y) ~= OUTIMG_1(x,y) )         s=0;    end	endsubplot(122);display1_mb(OUTIMG);title('Local histogram RMS deviation');drawnowendOUTIMG_1 =quantize_mb(OUTIMG_1, 256);OUTIMG=quantize_mb(OUTIMG,256);sum(sum(abs(double(OUTIMG_1) - double(OUTIMG))))